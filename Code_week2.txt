library(readr)        # to import tabular data (e.g. csv)
library(dplyr)        # to manipulate (tabular) data
library(ggplot2)      # to visualize data
library(sf)           # to handle spatial vector data
library(terra)        # To handle raster data
library(lubridate)    # To handle dates and times
library(tidyverse)

## TASK 1
wildschwein <- read_delim("wildschwein_BE_2056.txt",",")

wildschwein <- st_as_sf(wildschwein, coords = c("E", "N"), crs = 2056, remove = FALSE)


## TASK 2
?difftime

wildschwein <-wildschwein%>%
  group_by(TierID)%>%
  mutate(timelag=as.integer(difftime(lead(DatetimeUTC), DatetimeUTC,units="secs")))

data_group <- wildschwein %>% 
  group_by(TierID, DatetimeUTC)
ggplot(data = data_group, aes(x = DatetimeUTC, y = TierID ))+
  geom_line()

## Question -> How many individuals were tracked?
## Answer -> They tracked three individuals.

Time_max<-  max(wildschwein$DatetimeUTC)
Time_min <- min(wildschwein$DatetimeUTC)
difftime(Time_max,Time_min,units = "days")

## Question -> For how long were the individual tracked? Are there gaps?
## Answer -> 339 days

ggplot(data=wildschwein)+
  geom_line(mapping=aes(x=wildschwein$DatetimeUTC,y=wildschwein$timelag,colour=wildschwein$TierID))
 
## Question -> Were all individuals tracked concurrently or sequentially?
## Answer -> They were tracked concurrently

wildschwein%>%
  group_by(TierID)%>%
  summarise(median(timelag,na.rm=TRUE))

ggplot(data=wildschwein,mapping=aes(x=timelag))+
  geom_histogram(binwidth =10)+
  scale_y_log10()+
  xlim(0,15000)+
  theme_classic()

## Question -> What is the temporal sampling interval between the locations?
## Answer -> In average for 900s 

wildschwein
## TASK 3
E1 <- wildschwein$E
N1 <- wildschwein$N  
E2 <- lead(E1)
N2 <- lead(N1)

steplength <- as.integer(sqrt((E1-E2)^2 + (N1-N2)^2)) 

wildschwein %>% 
  mutate(steplength = steplength)

speed <- as.numeric(steplength/time_difference)
view(speed)
wildschwein %>% 
  mutate(speed = speed)

## Question -> What speed unit do you get?
## Answer -> Unit: m/s

## TASK 4
caro <- read_delim("caro60.txt",",")
caro <- st_as_sf(caro, coords = c("E", "N"), crs = 2056, remove = FALSE)

caro_3 <- caro[seq(1,nrow(caro),by=3),]
caro_6 <- caro[seq(1,nrow(caro),by=6),]
caro_9 <- caro[seq(1,nrow(caro),by=9),]

?slice()

nrow(caro)
nrow(caro_3)
nrow(caro_6)
nrow(caro_9)

##Timelag
caro<-caro%>%
  mutate(timelag=as.integer(difftime(lead(DatetimeUTC), DatetimeUTC,units="secs")))
caro_3<-caro_3%>%
  mutate(timelag=as.integer(difftime(lead(DatetimeUTC), DatetimeUTC,units="secs")))
caro_6<-caro_6%>%
  mutate(timelag=as.integer(difftime(lead(DatetimeUTC), DatetimeUTC,units="secs")))
caro_9<-caro_9%>%
  mutate(timelag=as.integer(difftime(lead(DatetimeUTC), DatetimeUTC,units="secs")))

##Steplength
caro <- caro %>%
  mutate(euclidean = sqrt((E- lead(E,1))^2 + (N -lead(N,1))^2))
caro_3 <- caro_3 %>%
  mutate(euclidean = sqrt((E- lead(E,1))^2 + (N -lead(N,1))^2))
caro_6<- caro_6 %>%
  mutate(euclidean = sqrt((E- lead(E,1))^2 + (N -lead(N,1))^2))
caro_9 <- caro_9 %>%
  mutate(euclidean = sqrt((E- lead(E,1))^2 + (N -lead(N,1))^2))

##Speed
caro <- caro %>%
  mutate(speed=euclidean/timelag)
caro_3 <- caro_3 %>%
  mutate(speed=euclidean/timelag)
caro_6 <- caro_6 %>%
  mutate(speed=euclidean/timelag)
caro_9 <- caro_9 %>%
  mutate(speed=euclidean/timelag)

##Plots
ggplot(data=caro,mapping=aes(x=E, y=N))+
  geom_path(data=caro,mapping=aes(color="1 minute"))+
  geom_path(data = caro_3, mapping=aes(color="3 minutes"))+
  geom_point(data=caro,mapping=aes(color="1 minute"))+
  geom_point(data = caro_3, mapping=aes(color="3 minutes"))+
  theme_light()+
  labs(color="Trajectory", title = "Comparing original- with 3 min-resampled data")+
  theme(title=element_text(size=8))

ggplot(data = caro,mapping=aes(x=E, y=N))+
  geom_path(data= caro,mapping=aes(color="1 minute"))+
  geom_path(data = caro_6, mapping=aes(color="6 minutes"))+
  geom_point(data=caro,mapping=aes(color="1 minute"))+
  geom_point(data = caro_6, mapping=aes(color="6 minutes"))+
  theme_light()+
  labs(color="Trajectory", title = "Comparing original- with 6 min-resampled data")+
  theme(title=element_text(size=8))

ggplot(data = caro,mapping=aes(x=E, y=N))+
  geom_path(data= caro,mapping=aes(color="1 minute"))+
  geom_path(data = caro_9, mapping=aes(color="9 minutes"))+
  geom_point(data=caro,mapping=aes(color="1 minute"))+
  geom_point(data = caro_9, mapping=aes(color="9 minutes"))+
  theme_light()+
  labs(color="Trajectory", title = "Comparing original- with 9 min-resampled data")+
  theme(title=element_text(size=8))

ggplot(data = caro,mapping=aes(x=DatetimeUTC, y=speed))+
  geom_line(data=caro, mapping=aes(colour="1 min"))+
  geom_line(data=caro_3, mapping=aes(colour="3 min"))+
  geom_line(data=caro_6, mapping=aes(colour="6 min"))+
  geom_line(data=caro_9, mapping=aes(colour="9 min"))+
  theme_light()+
  labs(color="Trajectory", title = "Comparing derived speed at different sampling intervals")+
  theme(title=element_text(size=8))+
  xlab("Time")+
  ylab("Speed (m/s)")


## TASK 5
library(zoo)
example <- rnorm(10)
rollmean(example,k = 3,fill = NA,align = "left")

caro_win <- caro
caro_win$k2 <- rollmean(caro_win$speed, k=2, fill = NA, align = "left")
caro_win$k4 <- rollmean(caro_win$speed, k=4, fill = NA, align = "left")
caro_win$k6 <- rollmean(caro_win$speed, k=6, fill = NA, align = "left")
caro_win$k8 <- rollmean(caro_win$speed, k=8, fill = NA, align = "left")
caro_win$k10 <- rollmean(caro_win$speed, k=10, fill = NA, align = "left")
caro_win

#Plots
ggplot(data = caro_win,mapping=aes(x=DatetimeUTC, y=speed))+
  geom_line(alpha=0.5)+
  geom_line(data=caro_win, mapping=aes(y=k2, color="k2"))+
  geom_line(data=caro_win, mapping=aes(y=k4, color="k4"))+
  geom_line(data=caro_win, mapping=aes(y=k6, color="k6"))+
  geom_line(data=caro_win, mapping=aes(y=k8, color="k8"))+
  geom_line(data=caro_win, mapping=aes(y=k10, color="k10"))+
  theme_light()+
  labs(color="Window size", title = "Comparing derived speed at different window sizes")+
  theme(title=element_text(size=8))+
  xlab("Time")+
  ylab("Speed (m/s)")
